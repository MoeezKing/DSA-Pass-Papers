#include <iostream>
using namespace std;
class CircularQueue
{
 public:
     int *arr;
    int size;
    int front;
    int rear;
    int length;
    
    CircularQueue(int size=10)
    {
        this->size=size;
        arr=new int[size];
        front=0;
        rear=-1;
        length=0;
        for(int i=0;i<size-1;i++)
            arr[i]=-9999;
        
    }
    bool isEmpty()
    {
        return (length==0);        
    }
    bool isFull()
    {
        return (length==size);
    }
    void enqueue(int val)
    {
        if(isFull())
            return;
            
        rear=(rear+1)%size;    
        arr[rear]=val;
        length++;
    }
    void dequeue()
    {
        if(isEmpty())
            return;
            
        arr[front]=-9999;    
        front=(front+1)%size;
        length--;
    }
    int Front()
    {
        return arr[front];
    }
    int Rear()
    {
        return arr[rear];
    }
    void print()
    {
        for(int i=0;i<size;i++)
            cout<<"\t"<<arr[i];
    }
};
int main()
{
    CircularQueue q1;
    for(int i=1;i<=10;i++)
        q1.enqueue(i);
    
    q1.dequeue();
    q1.dequeue();
    q1.enqueue(89);
    q1.enqueue(69);
    
    cout<<q1.Rear()<<endl;
    q1.print();
    
    return 0;
}
